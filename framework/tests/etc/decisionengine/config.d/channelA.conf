{
  "sources"  : {
    "CloudBudget" : {
      "module" :  "testcases.AWS.CloudBudget",
                  "parameters": {
                    "budget_file": "/tmp/budget",
                  },
                  "schedule": 300,
      },
      "AWSSpotPrice" : {
        "module" : "testcases.AWS.AWSSpotPrice",
        "parameters": {
          "budget_file": "/tmp/budget",
        },
        "schedule": 300,
      },
      "HPCAllocation" : {
        "module" : "testcases.AWS.HPCAllocation",
        "parameters" : {"key" : "value"},
      },
      "HTCondorJobQ" : {
        "module" : "testcases.AWS.HTCondorJobQ",
        "parameters":  {
          "schedd_name":   "cmsosgce.fnal.gov",
          "constraint":    "(VO_Name =?= 'CMS')",
          "desired_attrs": ["ProcId", "ClusterId", "VO_Name"],
        },
        "schedule": 300,
      },
      "LocalCapacity" : {
        "module" : "testcases.AWS.LocalCapacity",
        "parameters" : {
          "collector_name": "cmscollector.fnal.gov",
          "constraint": "(Slot_Type =!= 'Partitionable')",
        },
        "schedule": 300,
      },
      "ProvisionerResourceList" : {
        "module" : "testcases.AWS.ProvisionerResourceList",
        "parameters" : {"key" : "value"},
        "schedule" : 300,
      },
  },
  "transforms" : {
    "CloudRequests" : {
      "module" : "testcases.AWS.CloudRequests",
      "parameters" : {"key" : "value"},
      "schedule" : 300,  # execution frequency
    },
  },
  "logicengines" : {
    "logicengine1" : {
      "module" : "logicengine.LogicEngine",
      "parameters" : {
          "rules": {
            "allow_overflow": {
              "expression": "(jobs_present && overflow_permitted && overflow_condition)",
              "actions": ['use_osg'],
              "facts": ['handle_overflow'],
            },
            "disallow_overflow": {
              "expression": "!handle_overflow",
              "actions": ['use_local'],
              "facts": [],
            },
            "handle_hpc": {
              "expression": "(handle_overflow && overflow_hpc_permitted && hpc_sufficient_allocation)",
              "actions": [],
              "facts": ['use_hpc'],
            },
            "handle_cloud": {
              "expression": "(handle_overflow && !use_hpc && overflow_cloud_permitted && cloud_sufficient_budget)",
              "actions": [],
              "facts": ['use_cloud'],
          }
            },
            "publish_cloud": {
              "expression": "use_cloud",
              "actions": ["publish_cloud"],
              "facts": [],
            },
        },
        "facts" : {
          "jobs_present":              "(len(jobs.index) > 0)",
          "overflow_condition":        "((len(jobs.index) - local_slots) > params['threshold'])",
          "overflow_permitted":        "(params['overflow_permitted'])",
          "overflow_hpc_permitted":    "(params['overflow_hpc_permitted'])",
          "overflow_cloud_permitted":  "(params['overflow_cloud_permitted'])",
          "hpc_sufficient_allocation": "(available_hpc_allocation > jobs['time'].sum())",
          "cloud_sufficient_budget":   "(available_cloud_budget > sum(['jobs']['estimated_cost']))",
          "good_total_estimated_budget" : "available_cloud_budget - ( jobs['estimated_cost'].sum()) > 0",
          "good_total_burn_rate" : "p_target_burn_rate >= (jobs['burn_rate'].sum())"
        },
      },
    "schedule" : 300,
    }
  },
  "publishers" : {
    "publisher1" : {
      "module" : "Publisher",
      "parameters" : {"key" : "value"},
      "schedule" : 300,  # execution frequency
    }
  }
}
