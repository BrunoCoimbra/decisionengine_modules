{ "sources"  : {
    "BillingInfo" : {
        "module" :  "modules.AWS.sources.BillingInfo",
        "name"   :  "BillingInfo",
                    "parameters": {
                        "billing_configuration": "%s/de_config/AccountConstants_my.py"%(os.environ.get('HOME'),),
			"dst_dir_for_s3_files":"%s/de_tmp_aws_files"%(os.environ.get('HOME'),),
                    },
                    "schedule": 3600,
    },
    "CloudBudget" : {
        "module" :  "modules.AWS.CloudBudget",
        "name"   :  "CloudBudget",
                    "parameters": {
                        "budget_file": "/tmp/budget",
                    },
                    "schedule": 300,
    },
    "AWSSpotPrice" : {
        "module" : "modules.AWS.sources.AWSSpotPrice",
        "name"   : "AWSSpotPrice",
        "parameters": {
	               "spot_price_configuration": "%s/de_config/AWS_Spot_price_config.py"%(os.environ.get('HOME'),),
            "budget_file": "/tmp/budget",
        },
        "schedule": 360,
    },
    "AWSOccupancy" : {
        "module" : "modules.AWS.sources.AWSOccupancy",
        #"module" : "modules.AWS.AWSSpotPrice",
        "name"   : "AWSOccupancy",
        "parameters": {
	               "occupancy_configuration": "%s/de_config/AWS_occupancy_config.py"%(os.environ.get('HOME'),),
        },
        "schedule": 360,
    },
    "HPCAllocation" : {
        "module" : "modules.AWS.HPCAllocation",
        "name"   : "HPCAllocation",
        "parameters" : {"key" : "value"},
    },
    "HTCondorJobQ" : {
        "module" : "modules.AWS.HTCondorJobQ",
        "name"   : "HTCondorJobQ",
        "parameters":  {
            "schedd_name":   "cmsosgce.fnal.gov",
            "constraint":    "(VO_Name =?= 'CMS')",
            "desired_attrs": ["ProcId", "ClusterId", "VO_Name"],
        },
        "schedule": 320,
    },
    "LocalCapacity" : {
        "module" : "modules.AWS.LocalCapacity",
        "name"   : "LocalCapacity",
        "parameters" : {
            "collector_name": "cmscollector.fnal.gov",
            "constraint": "(Slot_Type =!= 'Partitionable')",
        },
        "schedule": 330,
    },
    "ProvisionerResourceList" : {
        "module" : "modules.AWS.ProvisionerResourceList",
        "name" : "ProvisionerResourceList",
        "parameters" : {"key" : "value"},
        "schedule" : 340,
    },
    "TweakableParameters" : {
        "module" : "modules.AWS.TweakableParameters",
        "name" : "TweakableParameters",
        "parameters" : {"key" : "value"},
        "schedule" : 350,
    },
  },
  "transforms" : {
      "CloudRequests" : {
          "module" : "modules.AWS.CloudRequests",
          "name" : "CloudRequests",
          "parameters" : {"key" : "value"},
          "schedule" : 300,  # execution frequency
      },
  },
  "logicengines" : {
      "logicengine1" : {
          "module" : "framework.logicengine.LogicEngine",
          "name" : "LogicEngine",
          "parameters" : {
              "rules": {
                  "allow_overflow": {
                      "expression": "(jobs_present && overflow_permitted && overflow_condition)",
                      "actions": ['use_osg'],
                      "facts": ['handle_overflow'],
                  },
                  "disallow_overflow": {
                      "expression": "!handle_overflow",
                      "actions": ['use_local'],
                      "facts": [],
                  },
                  "handle_hpc": {
                      "expression": "(handle_overflow && overflow_hpc_permitted && hpc_sufficient_allocation)",
                      "actions": [],
                      "facts": ['use_hpc'],
                  },
                  "handle_cloud": {
                      "expression": "(handle_overflow && !use_hpc && overflow_cloud_permitted && cloud_sufficient_budget)",
                      "actions": [],
                      "facts": ['use_cloud'],
                  },
                  "publish_cloud": {
                      "expression": "use_cloud",
                      "actions": ["publish_cloud"],
                      "facts": [],
                  },
              },
              "facts" : {
                  "jobs_present":              "(len(jobs.index) > 0)",
                  "overflow_condition":        "((len(jobs.index) - local_slots) > params['overflow_threshold'])",
                  "overflow_permitted":        "(params['overflow_permitted'])",
                  "overflow_hpc_permitted":    "(params['overflow_hpc_permitted'])",
                  "overflow_cloud_permitted":  "(params['overflow_cloud_permitted'])",
                  "hpc_sufficient_allocation": "(available_hpc_allocation > jobs['RequestTime'].sum())",
                  "cloud_sufficient_budget":   "(available_cloud_budget > jobs['estimated_cost'].sum())",
                  "good_total_estimated_budget" : "available_cloud_budget - ( jobs['estimated_cost'].sum()) > 0",
                  "good_total_burn_rate" : "params['target_burn_rate'] >= (jobs['burn_rate'].sum())"
              },
          },
          "schedule" : 300,
      }
  },
  "publishers" : {
      "publisher1" : {
          "module" : "Publisher",
          "name" : "Publisher",
          "parameters" : {"key" : "value"},
          "schedule" : 300,  # execution frequency
      }
  }
}
